var revc= require("./REVC");

var _string = "ATATCCTGCTTGATCGAGAACAGTTACGCAGTCCGAAAGCTCCGATATACTAAATTTATATCGAGTGTAAGGAACGGTTAGCTTAAACGGTGATAAATAATTTTTCACAAGTTTAGGCCCCCGAAAAGTATATCAGTTTCATACATCTTCATTGGGGGAGAAACATGGCCGTGGGATTCGCAACTCTCGATTTTTGTCCGCTGGAGTTATAGCATTCAGATGAGCTGTGTACAAGAAAGGCGCTAAACATATCTTTGTGCTCGCCCTGTATATCTGACGGGGAACGTGGTACGAGGCAGGGCCCTGGCAAAGATGCCCTCTTGTTAGCGCGAGTAACGTGGCCCCCACCAAATTGTTGGAAGTCCCCTAAAGCAACGATTTCACATGGTGCCCTGTGCAAGAGGCCTGCTACACACATAAAATCAAACTGTCTAAGCGAGAAACTTGAAAAAATTTTTTGTTACCCGGCACGTATCTCATATCGCCACCAGCGCCGAGCTCTGGAGGGGGTATGCAGGAGTTTCCGAACTCGTGGTAATTCCCGTCGGGGCTAATTCTAGGTCGGGAGACTGGAGCGGTTGCGATCTGCGTTTGAGTCGACCCCTCACAGTACCGAGCATAGGGAGGCCTACTTGTGGAATCATCAGCCTCCGGGTGTGAGCAAGCCCTGCTATTGGAGCTCTTAAAGGTATAAGTGCCGACGTATCATCTTGAGCTATTCAGGTGGATTAGGGATGCCACATAACCATCTGGCCCTGATGAGATGTACAACCCCGTACCGGGACACGATCACGACTATGCTGGTCGTCCTGGTACACCGTGTCGGTGTGCTGACGCGGCTGACACCAGACACAGATGGGTTACGTAATGACCAGACTAACCACTTAACCTCGAAATGCACGATAT";

var _map = new Map();

const checkIfPalindrome = (j, _string) => {
    for(var i = 0; i < _string.length + 1 - j; i++){
        var testArray = _string.substr(i, j);
         var reverseCompliment = [...testArray].map(x => revc.complementValues(x)).reverse().join('');
    
         if(testArray === reverseCompliment){
             console.log((i + 1) + " " + j);
         }
    }
}

for(i = 4; i < 13; i+=2){
    checkIfPalindrome(i, _string);
}
